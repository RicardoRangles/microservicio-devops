name: CI/CD Pipeline

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-test-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. Clonar el repositorio
      - name: Clonar el repositorio
        uses: actions/checkout@v3

      # 2. Configurar Node.js
      - name: Configurar Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # 3. Instalar dependencias
      - name: Instalar dependencias
        run: npm install

      # 4. Ejecutar pruebas automatizadas
      - name: Ejecutar pruebas
        run: npm test

      # 5. Análisis estático con ESLint
      - name: Análisis estático de código
        run: npx eslint . || true

      # 6. Construir imagen Docker
      - name: Construir imagen Docker
        run: docker build -t ${{ secrets.DOCKER_USERNAME }}/microservicio-devops:${{ github.sha }} .

      # 7. Loguear en DockerHub
      - name: Loguear en DockerHub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      # 8. Push de la imagen a DockerHub
      - name: Subir imagen a DockerHub
        run: docker push ${{ secrets.DOCKER_USERNAME }}/microservicio-devops:${{ github.sha }}

      # 9. Desplegar en Kubernetes
      - name: Desplegar en Kubernetes
        env:
          KUBECONFIG: ${{ secrets.KUBE_CONFIG }}
        run: |
          kubectl apply -f k8s/deployment.yaml && \
          kubectl apply -f k8s/service.yaml && \
          kubectl apply -f k8s/ingress.yaml
